{"ast":null,"code":"var _jsxFileName = \"H:\\\\Stuff\\\\Code Workspaces\\\\ReactJS Workspace\\\\utsc-project2\\\\utsc-project\\\\src\\\\components\\\\LoginForm\\\\LoginForm.js\";\nimport React from 'react';\nimport { Field, reduxForm, SubmissionError } from 'redux-form';\nimport styles from './LoginForm.module.css';\n\nvar renderField = function renderField(_ref) {\n  var input = _ref.input,\n      label = _ref.label,\n      type = _ref.type,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error;\n  return React.createElement(\"div\", {\n    className: styles.Field,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, label), label === 'Message' ? React.createElement(\"textarea\", Object.assign({\n    className: styles.Message\n  }, input, {\n    placeholder: label,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })) : React.createElement(\"input\", Object.assign({\n    className: styles.Regular\n  }, input, {\n    placeholder: label,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), touched && error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, error));\n};\n\nvar LoginForm = function LoginForm(props) {\n  var handleSubmit = props.handleSubmit;\n\n  var submit = function submit(values) {\n    var error = {};\n    var isError = false;\n\n    if (!('email' in values)) {\n      error.email = 'Required';\n      isError = true;\n    }\n\n    if (!('password' in values)) {\n      error.password = 'Required';\n      isError = true;\n    }\n\n    if (isError) {\n      throw new SubmissionError(error);\n    } else {\n      console.log('Valid Submission');\n      console.log(values);\n      props.onInitSignIn(values.email, values.password);\n    }\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(submit),\n    className: styles.Form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: renderField,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    component: renderField,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), props.error && React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, props.error), React.createElement(\"button\", {\n    className: props.loading ? [styles.SubmitButton, styles.SubmitButtonLoading].join(' ') : styles.SubmitButton,\n    type: \"submit\",\n    disabled: props.loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.loading ? 'Loading' : 'Submit'));\n};\n\nLoginForm = reduxForm({\n  // a unique name for the form\n  form: 'LoginForm'\n})(LoginForm);\nexport default LoginForm;","map":{"version":3,"sources":["H:\\Stuff\\Code Workspaces\\ReactJS Workspace\\utsc-project2\\utsc-project\\src\\components\\LoginForm\\LoginForm.js"],"names":["React","Field","reduxForm","SubmissionError","styles","renderField","input","label","type","meta","touched","error","Message","Regular","LoginForm","props","handleSubmit","submit","values","isError","email","password","console","log","onInitSignIn","Form","loading","SubmitButton","SubmitButtonLoading","join","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm, SubmissionError } from 'redux-form';\r\nimport styles from './LoginForm.module.css';\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div className={styles.Field}>\r\n    <label>{label}</label>\r\n\r\n    {\r\n      label === 'Message' ?\r\n        <textarea className={styles.Message} {...input} placeholder={label} type={type} />\r\n        :\r\n        <input className={styles.Regular} {...input} placeholder={label} type={type} />\r\n    }\r\n\r\n    {touched && error && <span>{error}</span>}\r\n  </div>\r\n)\r\n\r\nlet LoginForm = props => {\r\n  const { handleSubmit } = props;\r\n\r\n  const submit = (values) => {\r\n    let error = {};\r\n    let isError = false;\r\n\r\n    if (!('email' in values)) {\r\n      error.email = 'Required';\r\n      isError = true;\r\n    }\r\n\r\n    if (!('password' in values)) {\r\n      error.password = 'Required';\r\n      isError = true;\r\n    }\r\n\r\n    if (isError) {\r\n      throw new SubmissionError(error);\r\n    } else {\r\n      console.log('Valid Submission');\r\n      console.log(values);\r\n      props.onInitSignIn(values.email, values.password);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className={styles.Form}>\r\n      <Field\r\n        name=\"email\"\r\n        type=\"email\"\r\n        component={renderField}\r\n        label=\"Email\"\r\n      />\r\n      <Field\r\n        name=\"password\"\r\n        type=\"password\"\r\n        component={renderField}\r\n        label=\"Password\"\r\n      />\r\n      {props.error && <strong>{props.error}</strong>}\r\n      <button className={props.loading ? [styles.SubmitButton, styles.SubmitButtonLoading].join(' ') : styles.SubmitButton} type=\"submit\" disabled={props.loading}>\r\n        {props.loading ? 'Loading' : 'Submit'}\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nLoginForm = reduxForm({\r\n  // a unique name for the form\r\n  form: 'LoginForm'\r\n})(LoginForm)\r\n\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}