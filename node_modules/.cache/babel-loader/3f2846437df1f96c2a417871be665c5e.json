{"ast":null,"code":"import _objectSpread from \"H:\\\\Stuff\\\\Code Workspaces\\\\ReactJS Workspace\\\\utsc-project2\\\\utsc-project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nvar initialState = {\n  projects: [],\n  error: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SET_PROJECTS:\n      var projects = [];\n\n      for (var key in action.projects) {\n        var project = action.projects[key];\n        projects.push({\n          project: project\n        });\n      }\n\n      return _objectSpread({}, state, {\n        projects: projects,\n        error: false\n      });\n\n    case actionTypes.FETCH_PROJECTS_FAILED:\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["H:\\Stuff\\Code Workspaces\\ReactJS Workspace\\utsc-project2\\utsc-project\\src\\store\\reducers\\projects.js"],"names":["actionTypes","initialState","projects","error","reducer","state","action","type","SET_PROJECTS","key","project","push","FETCH_PROJECTS_FAILED"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,YAAjB;AACE,UAAIN,QAAQ,GAAG,EAAf;;AAEA,WAAK,IAAIO,GAAT,IAAgBH,MAAM,CAACJ,QAAvB,EAAiC;AAC/B,YAAIQ,OAAO,GAAGJ,MAAM,CAACJ,QAAP,CAAgBO,GAAhB,CAAd;AACAP,QAAAA,QAAQ,CAACS,IAAT,CAAc;AACZD,UAAAA,OAAO,EAAPA;AADY,SAAd;AAGD;;AACD,+BACKL,KADL;AAEEH,QAAAA,QAAQ,EAAEA,QAFZ;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAKH,WAAW,CAACY,qBAAjB;AACE,+BACKP,KADL;AAEEF,QAAAA,KAAK,EAAE;AAFT;;AAIF;AACE,aAAOE,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  error: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_PROJECTS:\r\n      let projects = [];\r\n\r\n      for (let key in action.projects) {\r\n        let project = action.projects[key];\r\n        projects.push({\r\n          project\r\n        });\r\n      }\r\n      return {\r\n        ...state,\r\n        projects: projects,\r\n        error: false\r\n      }\r\n    case actionTypes.FETCH_PROJECTS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}