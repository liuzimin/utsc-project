{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport * as authActions from './auth';\nimport axios from '../../axios-projects';\nexport var signIn = function signIn(authData) {\n  return {\n    type: actionTypes.SIGN_IN,\n    authData: authData\n  };\n};\nexport var signInFailed = function signInFailed(errorMessage) {\n  return {\n    type: actionTypes.SIGN_IN_FAILED,\n    errorMessage: errorMessage\n  };\n};\nexport var signInReset = function signInReset() {\n  console.log('inside sign in action');\n  return function (dispatch) {\n    dispatch({\n      type: actionTypes.SIGN_IN_RESET\n    });\n  };\n};\nexport var loading = function loading(_loading) {\n  return {\n    type: actionTypes.SIGN_IN_LOADING,\n    loading: _loading\n  };\n};\nexport var initSignIn = function initSignIn(email, password) {\n  return function (dispatch) {\n    dispatch(loading(true));\n    axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDIuViSw1eLVB8zKgTdPHVmwm9O1xDFLFQ', {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }).then(function (res) {\n      console.log('login res: ', res);\n      var authData = res.data;\n      var authHeaders = res.headers;\n      axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/getAccountInfo?key=AIzaSyDIuViSw1eLVB8zKgTdPHVmwm9O1xDFLFQ', {\n        idToken: res.data.idToken\n      }).then(function (res) {\n        var userData = res.data.users[0];\n\n        if (userData.emailVerified === false) {\n          var e = Error('Email not verified');\n          e.name = 'UNVERIFIED_EMAIL';\n          throw e;\n        }\n\n        dispatch(signIn(authData)); // need to add admin dispatch\n\n        console.log('dispatching authactions', authData);\n        dispatch(authActions.login(authData.email, authData.idToken, authHeaders.expires, false));\n      }).catch(function (error) {\n        console.log('get user data error');\n        console.log(error);\n        console.log(error.message);\n\n        try {\n          dispatch(signInFailed(error.response.data.error.message));\n        } catch (_unused) {\n          dispatch(signInFailed(error.message));\n        }\n      });\n    }).catch(function (error) {\n      console.log(error);\n      console.log(error.response);\n      dispatch(signInFailed(error.response.data.error.message));\n    });\n  };\n};","map":{"version":3,"sources":["H:\\Stuff\\Code Workspaces\\ReactJS Workspace\\utsc-project2\\utsc-project\\src\\store\\actions\\signIn.js"],"names":["actionTypes","authActions","axios","signIn","authData","type","SIGN_IN","signInFailed","errorMessage","SIGN_IN_FAILED","signInReset","console","log","dispatch","SIGN_IN_RESET","loading","SIGN_IN_LOADING","initSignIn","email","password","post","returnSecureToken","then","res","data","authHeaders","headers","idToken","userData","users","emailVerified","e","Error","name","login","expires","catch","error","message","response"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,QAAD,EAAc;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEL,WAAW,CAACM,OADb;AAELF,IAAAA,QAAQ,EAAEA;AAFL,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACC,YAAD,EAAkB;AAC5C,SAAO;AACLH,IAAAA,IAAI,EAAEL,WAAW,CAACS,cADb;AAELD,IAAAA,YAAY,EAAEA;AAFT,GAAP;AAID,CALM;AAOP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,SAAO,UAACC,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPR,MAAAA,IAAI,EAAEL,WAAW,CAACc;AADX,KAAD,CAAR;AAGD,GAJD;AAKD,CAPM;AASP,OAAO,IAAMC,OAAO,GAAG,iBAACA,QAAD,EAAa;AAClC,SAAO;AACLV,IAAAA,IAAI,EAAEL,WAAW,CAACgB,eADb;AAELD,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAE7C,SAAO,UAACN,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAACE,OAAO,CAAC,IAAD,CAAR,CAAR;AACAb,IAAAA,KAAK,CAACkB,IAAN,CAAW,uHAAX,EAAoI;AAClIF,MAAAA,KAAK,EAAEA,KAD2H;AAElIC,MAAAA,QAAQ,EAAEA,QAFwH;AAGlIE,MAAAA,iBAAiB,EAAE;AAH+G,KAApI,EAKGC,IALH,CAKQ,UAACC,GAAD,EAAS;AACbZ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BW,GAA3B;AACA,UAAInB,QAAQ,GAAGmB,GAAG,CAACC,IAAnB;AACA,UAAIC,WAAW,GAAGF,GAAG,CAACG,OAAtB;AACAxB,MAAAA,KAAK,CAACkB,IAAN,CAAW,uHAAX,EAAoI;AAClIO,QAAAA,OAAO,EAAEJ,GAAG,CAACC,IAAJ,CAASG;AADgH,OAApI,EAGGL,IAHH,CAGQ,UAACC,GAAD,EAAS;AACb,YAAIK,QAAQ,GAAGL,GAAG,CAACC,IAAJ,CAASK,KAAT,CAAe,CAAf,CAAf;;AACA,YAAID,QAAQ,CAACE,aAAT,KAA2B,KAA/B,EAAsC;AACpC,cAAIC,CAAC,GAAGC,KAAK,CAAC,oBAAD,CAAb;AACAD,UAAAA,CAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACD;;AACDlB,QAAAA,QAAQ,CAACV,MAAM,CAACC,QAAD,CAAP,CAAR,CAPa,CAQb;;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCR,QAAvC;AACAS,QAAAA,QAAQ,CAACZ,WAAW,CAACiC,KAAZ,CAAkB9B,QAAQ,CAACc,KAA3B,EAAkCd,QAAQ,CAACuB,OAA3C,EAAoDF,WAAW,CAACU,OAAhE,EAAyE,KAAzE,CAAD,CAAR;AACD,OAdH,EAeGC,KAfH,CAeS,UAACC,KAAD,EAAW;AAChB1B,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAZ;AACA1B,QAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAK,CAACC,OAAlB;;AACA,YAAI;AACFzB,UAAAA,QAAQ,CAACN,YAAY,CAAC8B,KAAK,CAACE,QAAN,CAAef,IAAf,CAAoBa,KAApB,CAA0BC,OAA3B,CAAb,CAAR;AACD,SAFD,CAEE,gBAAM;AACNzB,UAAAA,QAAQ,CAACN,YAAY,CAAC8B,KAAK,CAACC,OAAP,CAAb,CAAR;AACD;AACF,OAxBH;AAyBD,KAlCH,EAmCGF,KAnCH,CAmCS,UAACC,KAAD,EAAW;AAChB1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAZ;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,KAAK,CAACE,QAAlB;AACA1B,MAAAA,QAAQ,CAACN,YAAY,CAAC8B,KAAK,CAACE,QAAN,CAAef,IAAf,CAAoBa,KAApB,CAA0BC,OAA3B,CAAb,CAAR;AACD,KAvCH;AAwCD,GA1CD;AA2CD,CA7CM","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport * as authActions from './auth';\r\nimport axios from '../../axios-projects';\r\n\r\nexport const signIn = (authData) => {\r\n  return {\r\n    type: actionTypes.SIGN_IN,\r\n    authData: authData\r\n  }\r\n}\r\n\r\nexport const signInFailed = (errorMessage) => {\r\n  return {\r\n    type: actionTypes.SIGN_IN_FAILED,\r\n    errorMessage: errorMessage\r\n  }\r\n}\r\n\r\nexport const signInReset = () => {\r\n  console.log('inside sign in action')\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: actionTypes.SIGN_IN_RESET,\r\n    })\r\n  }\r\n}\r\n\r\nexport const loading = (loading) => {\r\n  return {\r\n    type: actionTypes.SIGN_IN_LOADING,\r\n    loading: loading\r\n  }\r\n}\r\n\r\nexport const initSignIn = (email, password) => {\r\n\r\n  return (dispatch) => {\r\n    dispatch(loading(true));\r\n    axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyDIuViSw1eLVB8zKgTdPHVmwm9O1xDFLFQ', {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true\r\n    })\r\n      .then((res) => {\r\n        console.log('login res: ', res)\r\n        let authData = res.data\r\n        let authHeaders = res.headers\r\n        axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/getAccountInfo?key=AIzaSyDIuViSw1eLVB8zKgTdPHVmwm9O1xDFLFQ', {\r\n          idToken: res.data.idToken\r\n        })\r\n          .then((res) => {\r\n            let userData = res.data.users[0];\r\n            if (userData.emailVerified === false) {\r\n              let e = Error('Email not verified');\r\n              e.name = 'UNVERIFIED_EMAIL';\r\n              throw e;\r\n            }\r\n            dispatch(signIn(authData))\r\n            // need to add admin dispatch\r\n            console.log('dispatching authactions', authData)\r\n            dispatch(authActions.login(authData.email, authData.idToken, authHeaders.expires, false))\r\n          })\r\n          .catch((error) => {\r\n            console.log('get user data error')\r\n            console.log(error)\r\n            console.log(error.message)\r\n            try {\r\n              dispatch(signInFailed(error.response.data.error.message));\r\n            } catch {\r\n              dispatch(signInFailed(error.message));\r\n            }\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        console.log(error.response)\r\n        dispatch(signInFailed(error.response.data.error.message));\r\n      });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}